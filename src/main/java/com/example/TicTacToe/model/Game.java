package com.example.TicTacToe.model;import com.example.TicTacToe.enums.GameStatus;import com.example.TicTacToe.enums.GameType;import com.example.TicTacToe.enums.Piece;import org.hibernate.annotations.Check;import javax.persistence.*;import java.io.Serializable;import java.util.Date;@Entity@Check(constraints = "first_player_piece_code = 'O' or first_player_piece_code = 'X' " +        "and game_type = 'COMPUTER' or game_type = 'COMPETITION' " +        "and game_status = 'IN_PROGRESS' or game_status = 'FIRST_PLAYER_WON' or game_status = 'SECOND_PLAYER_WON'" +        "or game_status = 'TIE' or game_status = 'WAITS_FOR_PLAYER' ")@Table(name = "GAMES")public class Game implements Serializable {    @Id    @GeneratedValue(strategy = GenerationType.AUTO)    private Long id;    //TODO add List of moves    @ManyToOne    @JoinColumn(name = "first_player_id", nullable = false)    private Player firstPlayer;    //there is an option to play with computer    @ManyToOne    @JoinColumn(name = "second_player_id", nullable = true)    private Player secondPlayer;    @Enumerated(EnumType.STRING)    private Piece firstPlayerPieceCode;    @Enumerated(EnumType.STRING)    private GameType gameType;    @Enumerated(EnumType.STRING)    private GameStatus gameStatus;    @Column(name = "created", nullable = false)    private Date created;    public Game() {    }    public Long getId() {        return id;    }    public void setId(Long id) {        this.id = id;    }    public Player getFirstPlayer() {        return firstPlayer;    }    public void setFirstPlayer(Player firstPlayer) {        this.firstPlayer = firstPlayer;    }    public Player getSecondPlayer() {        return secondPlayer;    }    public void setSecondPlayer(Player secondPlayer) {        this.secondPlayer = secondPlayer;    }    public Piece getFirstPlayerPieceCode() {        return firstPlayerPieceCode;    }    public void setFirstPlayerPieceCode(Piece firstPlayerPieceCode) {        this.firstPlayerPieceCode = firstPlayerPieceCode;    }    public GameType getGameType() {        return gameType;    }    public void setGameType(GameType gameType) {        this.gameType = gameType;    }    public GameStatus getGameStatus() {        return gameStatus;    }    public void setGameStatus(GameStatus gameStatus) {        this.gameStatus = gameStatus;    }    public Date getCreated() {        return created;    }    public void setCreated(Date created) {        this.created = created;    }}